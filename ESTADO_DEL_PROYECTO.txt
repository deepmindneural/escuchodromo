================================================================================
ESCUCHODROMO - ESTADO DEL PROYECTO
Plataforma de Bienestar Emocional con IA Afectiva
Actualizado: 14 de Octubre, 2025
================================================================================

================================================================================
1. ARQUITECTURA ACTUAL
================================================================================

ANTES (Eliminado):
  ❌ Monorepo con Nx
  ❌ Backend NestJS (78+ endpoints REST)
  ❌ WebSocket con Socket.io
  ❌ Base de datos Prisma + SQLite
  ❌ JWT Auth custom
  ❌ ~500 MB de código legacy

AHORA (Implementado):
  ✅ Aplicación Next.js 15 pura
  ✅ Supabase como backend completo
  ✅ PostgreSQL en la nube
  ✅ Supabase Auth (automático)
  ✅ Supabase Realtime (WebSocket)
  ✅ Row Level Security (RLS)
  ✅ ~200 MB total

================================================================================
2. BASE DE DATOS - SUPABASE
================================================================================

PROYECTO SUPABASE:
  URL: https://cvezncgcdsjntzrzztrj.supabase.co
  Estado: ✅ ACTIVO
  Base de datos: PostgreSQL 15

TABLAS CREADAS (14 tablas):
  ✅ Usuario
     - Almacena usuarios registrados
     - auth_id vinculado a Supabase Auth
     - Roles: USUARIO, TERAPEUTA, ADMIN

  ✅ PerfilUsuario
     - Información adicional del usuario
     - Preferencias (idioma, moneda, zona horaria)
     - Consentimientos

  ✅ Conversacion
     - Conversaciones de chat de usuarios autenticados
     - Soporte para embeddings de vector (IA)
     - Estados: activa, archivada, finalizada

  ✅ Mensaje
     - Mensajes de conversaciones autenticadas
     - Análisis de sentimiento
     - Detección de emociones (JSONB)
     - Embeddings vectoriales para contexto IA

  ✅ Test
     - Tests psicológicos (PHQ-9, GAD-7)
     - Multiidioma (ES/EN)

  ✅ Pregunta
     - Preguntas de cada test
     - Opciones en formato JSON

  ✅ Evaluacion
     - Resultados de tests completados
     - Puntuación y severidad
     - Historial completo

  ✅ RegistroAnimo
     - Seguimiento diario de ánimo
     - Escalas: ánimo, energía, estrés (1-10)

  ✅ Recomendacion
     - Recomendaciones personalizadas de IA
     - Priorizadas por importancia

  ✅ Pago
     - Historial de transacciones
     - Métodos: Stripe, PayPal, transferencia
     - Soporte COP y USD

  ✅ Notificacion
     - Notificaciones email, push, SMS
     - Estado: leída/no leída

  ✅ SesionPublica
     - Sesiones de chat para usuarios NO autenticados
     - Límite de 10 mensajes por sesión

  ✅ MensajePublico
     - Mensajes del chat público
     - Acceso anónimo permitido

  ✅ ConfiguracionIA
     - Configuración del modelo de IA
     - Parámetros ajustables

ROW LEVEL SECURITY (RLS):
  ✅ Políticas configuradas para todas las tablas
  ✅ Usuarios solo ven sus propios datos
  ✅ Admins tienen acceso completo
  ✅ Service role bypasea RLS (para Edge Functions)
  ✅ SIN errores de recursión infinita

EXTENSIONES HABILITADAS:
  ✅ uuid-ossp (generación de UUIDs)
  ✅ pgcrypto (encriptación)
  ✅ vector (embeddings para IA)

SEED DATA:
  ✅ Test PHQ-9 (Depresión) con 2 preguntas de ejemplo
  ✅ Test GAD-7 (Ansiedad) con 2 preguntas de ejemplo
  ✅ Configuración IA básica

REALTIME HABILITADO:
  ✅ Mensaje (chat en tiempo real)
  ✅ Notificacion (notificaciones instantáneas)
  ✅ MensajePublico (chat público)

================================================================================
3. FRONTEND - NEXT.JS
================================================================================

PÁGINAS MIGRADAS A SUPABASE (3/24):
  ✅ /iniciar-sesion
     - Usa Supabase Auth
     - Sin localStorage, cookies httpOnly
     - OAuth listo (Google, Facebook)

  ✅ /registrar
     - Crea usuario en Auth + tabla Usuario
     - Crea PerfilUsuario automáticamente
     - Validaciones completas

  ✅ /dashboard
     - Carga perfil desde Supabase
     - Logout con Supabase
     - Hooks personalizados (useUsuario, usePerfilUsuario)

PÁGINAS CON MIGRACIÓN PARCIAL (1/24):
  ⚠️  /chat
     - Interfaz completa ✅
     - Guarda mensajes en Supabase ✅
     - Chatbot con respuestas básicas (reglas simples) ⚠️
     - FALTA: Edge Function con OpenAI para IA real

PÁGINAS PENDIENTES DE MIGRAR (20/24):
  ❌ /evaluaciones (ver tests psicológicos)
  ❌ /evaluaciones/[codigo] (realizar test)
  ❌ /evaluaciones/resultado/[id] (ver resultados)
  ❌ /perfil (gestionar perfil de usuario)
  ❌ /animo (registro de ánimo diario)
  ❌ /recomendaciones (ver recomendaciones de IA)
  ❌ /pago (gestionar pagos/suscripciones)
  ❌ /admin (panel de administración)
  ❌ /admin/usuarios (gestionar usuarios)
  ❌ /terapeuta (panel de terapeuta)
  ❌ /terapeuta/pacientes (gestionar pacientes)
  ❌ Otras páginas menores

COMPONENTES UI (25+):
  ✅ Todos funcionan correctamente
  ✅ Navegacion
  ✅ Boton
  ✅ ChatVoz
  ✅ ImageWithFallback
  ✅ Loading
  ✅ Modal
  ✅ Alert
  ✅ Y más...

HOOKS PERSONALIZADOS:
  ✅ useUsuario() - Obtiene usuario autenticado
  ✅ usePerfilUsuario() - Obtiene perfil completo
  ✅ useMensajesRealtime() - Mensajes en tiempo real
  ✅ useNotificacionesRealtime() - Notificaciones en tiempo real

ESTILOS:
  ✅ Tailwind CSS configurado
  ✅ Colores primarios y secundarios definidos
  ✅ Animaciones (fade-in, slide-up, blob)
  ✅ Responsive design completo

================================================================================
4. AUTENTICACIÓN Y SEGURIDAD
================================================================================

SUPABASE AUTH:
  ✅ Login con email/contraseña
  ✅ Registro de nuevos usuarios
  ✅ Logout
  ✅ Sesiones persistentes (cookies httpOnly)
  ✅ Refresh tokens automáticos
  ✅ OAuth configurado (Google, Facebook) - pendiente activar
  ❌ Reset de contraseña (pendiente)
  ❌ Verificación de email (pendiente)

FUNCIONES DE AUTH (src/lib/supabase/auth.ts):
  ✅ registrarUsuario()
  ✅ iniciarSesion()
  ✅ cerrarSesion()
  ✅ obtenerUsuarioActual()
  ✅ esAdmin()
  ✅ esTerapeuta()
  ✅ resetearContrasena()
  ✅ actualizarContrasena()

MIDDLEWARE:
  ✅ Protección de rutas autenticadas
  ✅ Redirección automática a /iniciar-sesion
  ✅ Rutas públicas permitidas
  ✅ Refresh de sesión automático

ROW LEVEL SECURITY:
  ✅ Base de datos segura por diseño
  ✅ Imposible bypassear desde el cliente
  ✅ Cada usuario solo ve sus datos
  ✅ Admins tienen permisos especiales

================================================================================
5. FUNCIONALIDADES IMPLEMENTADAS
================================================================================

CHAT PÚBLICO (Usuarios NO autenticados):
  ✅ Acceso sin registro
  ✅ Límite de 10 mensajes
  ✅ Banner para registrarse
  ✅ Respuestas con reglas simples
  ✅ Almacenamiento en SesionPublica/MensajePublico
  ❌ IA real (pendiente Edge Function)

CHAT PRIVADO (Usuarios autenticados):
  ⚠️  Interfaz lista pero backend pendiente
  ❌ Crear conversaciones
  ❌ Historial de conversaciones
  ❌ Análisis de emociones
  ❌ Embeddings vectoriales
  ❌ Búsqueda semántica

TESTS PSICOLÓGICOS:
  ✅ Base de datos con PHQ-9 y GAD-7
  ❌ Interfaz para realizar tests (pendiente)
  ❌ Cálculo de puntuación (pendiente)
  ❌ Interpretación de resultados (pendiente)
  ❌ Historial de evaluaciones (pendiente)

REGISTRO DE ÁNIMO:
  ❌ Interfaz pendiente
  ❌ Gráficas de progreso pendiente

RECOMENDACIONES:
  ❌ Generación con IA pendiente
  ❌ Interfaz pendiente

PAGOS:
  ❌ Integración con Stripe pendiente
  ❌ Integración con PayPal pendiente
  ❌ Webhooks pendiente

NOTIFICACIONES:
  ❌ Email con SendGrid pendiente
  ❌ SMS con Twilio pendiente
  ❌ Push notifications pendiente

PANEL DE ADMINISTRACIÓN:
  ❌ Gestión de usuarios pendiente
  ❌ Analytics pendiente
  ❌ Reportes pendiente

VOZ:
  ❌ Speech-to-text pendiente
  ❌ Text-to-speech pendiente
  ❌ Análisis de emociones por voz pendiente

================================================================================
6. EDGE FUNCTIONS DE SUPABASE (BACKEND LOGIC)
================================================================================

PENDIENTE DE CREAR (6 funciones):

  ❌ generate-ai-response
     - Lógica: Recibe mensaje del usuario, consulta historial, genera respuesta con OpenAI GPT-4
     - Input: { conversacion_id, mensaje, usuario_id }
     - Output: { respuesta, emociones_detectadas, sentimiento }
     - Ubicación futura: supabase/functions/generate-ai-response/

  ❌ analyze-sentiment
     - Lógica: Analiza emociones en texto (8 emociones: alegría, tristeza, enojo, miedo, sorpresa, asco, anticipación, confianza)
     - Input: { texto }
     - Output: { emociones: { alegria: 0.8, tristeza: 0.2, ... }, sentimiento: 0.6 }
     - Ubicación futura: supabase/functions/analyze-sentiment/

  ❌ generate-recommendations
     - Lógica: Analiza historial de usuario y genera recomendaciones personalizadas
     - Input: { usuario_id }
     - Output: [{ titulo, descripcion, tipo, prioridad, url_accion }]
     - Ubicación futura: supabase/functions/generate-recommendations/

  ❌ process-webhook
     - Lógica: Maneja webhooks de Stripe/PayPal, actualiza estado de pagos
     - Input: { event_type, payment_data }
     - Output: { success: true }
     - Ubicación futura: supabase/functions/process-webhook/

  ❌ transcribe-audio
     - Lógica: Convierte audio a texto con Whisper API
     - Input: { audio_url }
     - Output: { texto, duracion }
     - Ubicación futura: supabase/functions/transcribe-audio/

  ❌ synthesize-speech
     - Lógica: Convierte texto a audio con Azure Speech o ElevenLabs
     - Input: { texto, voz }
     - Output: { audio_url }
     - Ubicación futura: supabase/functions/synthesize-speech/

CÓMO CREAR UNA EDGE FUNCTION:
  1. supabase functions new nombre-funcion
  2. Escribir código en TypeScript
  3. supabase functions deploy nombre-funcion
  4. Configurar variables de entorno (OPENAI_API_KEY, etc.)

================================================================================
7. VARIABLES DE ENTORNO
================================================================================

CONFIGURADAS:
  ✅ NEXT_PUBLIC_SUPABASE_URL
  ✅ NEXT_PUBLIC_SUPABASE_ANON_KEY
  ✅ SUPABASE_SERVICE_ROLE_KEY
  ✅ DATABASE_URL
  ✅ NEXT_PUBLIC_APP_URL
  ✅ NODE_ENV

PENDIENTES DE CONFIGURAR:
  ❌ OPENAI_API_KEY (para IA avanzada)
  ❌ STRIPE_SECRET_KEY
  ❌ STRIPE_PUBLISHABLE_KEY
  ❌ STRIPE_WEBHOOK_SECRET
  ❌ PAYPAL_CLIENT_ID
  ❌ PAYPAL_CLIENT_SECRET
  ❌ SENDGRID_API_KEY (emails)
  ❌ SENDGRID_FROM_EMAIL
  ❌ TWILIO_ACCOUNT_SID (SMS)
  ❌ TWILIO_AUTH_TOKEN
  ❌ TWILIO_PHONE_NUMBER
  ❌ AZURE_SPEECH_KEY (voz)
  ❌ AZURE_SPEECH_REGION

================================================================================
8. SCRIPTS ÚTILES
================================================================================

DESARROLLO:
  npm run dev                    - Inicia Next.js en http://localhost:3000
  npm run build                  - Build de producción
  npm run start                  - Inicia servidor de producción
  npm run lint                   - Ejecuta linter
  npm run type-check             - Verifica tipos TypeScript

SUPABASE:
  node scripts/test-supabase.js  - Verifica conexión y tablas
  (manual) SQL Editor            - Ejecutar migraciones

ARCHIVOS DE MIGRACIÓN:
  supabase/migracion-final-corregida.sql - Migración completa aplicada ✅
  supabase/seed.sql                      - Datos de prueba (dentro de migración)

================================================================================
9. DOCUMENTACIÓN DISPONIBLE
================================================================================

ARCHIVOS DE DOCUMENTACIÓN:
  ✅ README.md (pendiente actualizar)
  ✅ CLAUDE.md (instrucciones para Claude Code)
  ✅ LIMPIEZA_COMPLETADA.md (registro de limpieza del monorepo)
  ✅ MIGRACION_SUPABASE.md (guía de migración)
  ✅ ESTADO_MIGRACION.md (estado de la migración)
  ✅ INSTRUCCIONES_MIGRACION.md (cómo aplicar migración manual)
  ✅ ESTADO_DEL_PROYECTO.txt (este archivo)

================================================================================
10. PRUEBAS Y TESTING
================================================================================

TESTING:
  ❌ Tests unitarios (pendiente)
  ❌ Tests de integración (pendiente)
  ❌ Tests E2E (pendiente)

PRUEBAS MANUALES REALIZADAS:
  ✅ Registro de usuario funcional
  ✅ Login funcional
  ✅ Dashboard carga correctamente
  ✅ Chat público funcional
  ✅ Estilos Tailwind funcionan
  ✅ Navegación entre páginas
  ✅ Base de datos Supabase verificada

================================================================================
11. ROADMAP - PRÓXIMOS PASOS
================================================================================

PRIORIDAD ALTA (Para que la app sea funcional):

  1. ✅ COMPLETADO: Migración de base de datos
  2. ✅ COMPLETADO: Login y registro con Supabase
  3. ✅ COMPLETADO: Chat básico funcionando

  4. ❌ PENDIENTE: Crear Edge Function para IA del chat
     - Integrar OpenAI GPT-4
     - Implementar contexto conversacional
     - Análisis de emociones
     Estimado: 2-3 horas

  5. ❌ PENDIENTE: Migrar página de evaluaciones
     - Interfaz para ver tests disponibles
     - Interfaz para realizar tests
     - Cálculo de puntuación automático
     - Mostrar resultados e interpretación
     Estimado: 3-4 horas

  6. ❌ PENDIENTE: Página de perfil de usuario
     - Editar información personal
     - Cambiar contraseña
     - Preferencias
     Estimado: 2 horas

PRIORIDAD MEDIA (Funcionalidades importantes):

  7. ❌ Registro de ánimo diario
     - Interfaz de registro
     - Gráficas de progreso
     Estimado: 2-3 horas

  8. ❌ Sistema de recomendaciones
     - Edge Function con IA
     - Interfaz de visualización
     Estimado: 3-4 horas

  9. ❌ Chat privado (autenticado)
     - Crear/listar conversaciones
     - Historial completo
     - Búsqueda semántica
     Estimado: 4-5 horas

  10. ❌ Reset de contraseña
      - Email de recuperación
      - Cambio de contraseña
      Estimado: 1-2 horas

PRIORIDAD BAJA (Mejoras y features adicionales):

  11. ❌ Sistema de pagos
      - Integración Stripe
      - Webhooks
      - Historial de pagos
      Estimado: 5-6 horas

  12. ❌ Sistema de notificaciones
      - Email con SendGrid
      - Push notifications
      - SMS con Twilio
      Estimado: 4-5 horas

  13. ❌ Panel de administración
      - Gestión de usuarios
      - Analytics
      - Reportes
      Estimado: 6-8 horas

  14. ❌ Funcionalidades de voz
      - Speech-to-text
      - Text-to-speech
      - Análisis emocional de voz
      Estimado: 6-8 horas

  15. ❌ Tests automatizados
      - Unit tests
      - Integration tests
      - E2E tests
      Estimado: 8-10 horas

================================================================================
12. INFORMACIÓN TÉCNICA
================================================================================

STACK TECNOLÓGICO:
  - Next.js 15.2.5 (App Router)
  - React 19
  - TypeScript 5
  - Tailwind CSS 3
  - Supabase (PostgreSQL + Auth + Realtime + Storage)
  - Framer Motion (animaciones)
  - React Hot Toast (notificaciones)
  - React Icons

ESTRUCTURA DE CARPETAS:
  /src
    /app                  - Páginas Next.js (App Router)
    /lib
      /componentes        - Componentes UI reutilizables
      /hooks              - React hooks personalizados
      /supabase           - Integración con Supabase
  /supabase
    /migrations           - Migraciones SQL aplicadas
  /scripts                - Scripts de utilidad
  /public                 - Archivos estáticos

COMPATIBILIDAD:
  - Node.js 18+
  - Navegadores modernos (Chrome, Firefox, Safari, Edge)
  - Mobile responsive

RENDIMIENTO:
  - Build optimizado
  - Code splitting automático
  - Lazy loading de componentes
  - Imágenes optimizadas con Next/Image

================================================================================
13. ENLACES ÚTILES
================================================================================

PROYECTO:
  - Localhost: http://localhost:3000
  - Producción: (pendiente de deploy)

SUPABASE:
  - Dashboard: https://supabase.com/dashboard/project/cvezncgcdsjntzrzztrj
  - Database: https://supabase.com/dashboard/project/cvezncgcdsjntzrzztrj/editor
  - SQL Editor: https://supabase.com/dashboard/project/cvezncgcdsjntzrzztrj/sql
  - Auth: https://supabase.com/dashboard/project/cvezncgcdsjntzrzztrj/auth/users
  - API Docs: https://supabase.com/dashboard/project/cvezncgcdsjntzrzztrj/api

RECURSOS:
  - Docs Supabase: https://supabase.com/docs
  - Docs Next.js: https://nextjs.org/docs
  - Docs Tailwind: https://tailwindcss.com/docs

================================================================================
14. NOTAS IMPORTANTES
================================================================================

⚠️  CRÍTICO:
  - Service Role Key es SECRETO - nunca exponerlo en el cliente
  - Solo usar Anon Key en el frontend
  - RLS protege los datos incluso con Anon Key

💡 CONSEJOS:
  - Usa useUsuario() hook para obtener usuario autenticado
  - Usa usePerfilUsuario() para obtener perfil completo
  - Para operaciones que requieren service role, usa Edge Functions

🔒 SEGURIDAD:
  - Todas las tablas tienen RLS habilitado
  - Usuarios solo ven sus propios datos
  - Validación en cliente Y en servidor (RLS)
  - Contraseñas hasheadas automáticamente por Supabase Auth

📊 RENDIMIENTO:
  - Índices creados en campos comunes (email, auth_id, etc.)
  - Queries optimizadas con .select() específicos
  - Realtime solo en tablas necesarias

================================================================================
15. CONTACTO Y SOPORTE
================================================================================

PROYECTO:
  - Nombre: Escuchodromo
  - Versión: 2.0 (migrado a Supabase)
  - Autor: [Tu nombre]
  - Fecha de inicio: 2024
  - Última actualización: Octubre 2025

AYUDA:
  - Para bugs: Crear issue en GitHub
  - Para preguntas: Consultar documentación
  - Para Claude Code: Ver CLAUDE.md

================================================================================
FIN DEL DOCUMENTO
================================================================================

Última actualización: 14 de Octubre, 2025
Estado general: 🟡 EN DESARROLLO (70% migrado a Supabase)
Próximo milestone: Edge Function para IA del chat
